<h1>Look for the lines content</h1>

<%= form_with id: "line-form", method: :get, local: true do |form| %>
  <div>
    <%= form.label :id, "Enter Line index:" %>
    <%= form.number_field :id, required: true, min: 0, id: "line-id-input" %>
  </div>

  <div>
    <%= form.submit "Get Line" %>
  </div>
<% end %>

<div id="line-content">
</div>

<h3 id="spinner" style="margin-top: 30px; color: red;">
</h3>

<script>
  document.getElementById('line-form').addEventListener('submit', function(event) {
    event.preventDefault();
    const lineId = document.getElementById('line-id-input').value;
    const url = `<%= api_v1_lines_path %>/${lineId}`;
    const spinner = document.getElementById('spinner');
    const lineContentDiv = document.getElementById('line-content');

    lineContentDiv.innerHTML = 'Loading';

    setTimeout(() => {
      fetch(url, {
        method: 'GET',
        headers: {
          'Accept': 'application/json',
          'X-Requested-With': 'XMLHttpRequest'
        }
      })
        .then(response => {
          if (!response.ok) {
            return response.json().then(err => {
              throw new Error(err.error || 'Network response was not ok');
            });
          }
          return response.json();
        })
        .then(data => {
          if (data.error) {
            lineContentDiv.innerHTML = `<h3>Error:</h3><p>${data.error}</p>`;
          } else {
            lineContentDiv.innerHTML = `<h3>Line Content:</h3><p>${data.content}</p>`;
          }
        })
        .catch(error => {
          console.error('Error:', error);
          lineContentDiv.innerHTML = `<h3>Error:</h3><p>${error.message}</p>`;
        })
        .finally(() => {
          spinner.style.display = 'none';
        });
    }, 4000);
  });
</script>
